Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =10,000
ii. Business table =10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table =10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = Primary Key -> id ; 10,000
ii. Hours = Foreign Key -> business_id; 1562 
iii. Category = Foreign Key -> business_id,2643
iv. Attribute = Foreign Key-> business_id,1115 
v. Review = Primary Key -> id,10,000; Foreign Key ->business_id,8090; Foreign Key -> user_id,9581.
vi. Checkin = Foreign_Key -> business_id, 493
vii. Photo = Primary Key -> id, 10000; Foreign_key -> business_id, 6493
viii. Tip = Foreign key -> user_id,537 ; Foreign_key-> business_id,3979
ix. User = Primary Key -> id;10,000
x. Friend = distinct friend_id,9415
xi. Elite_years = Foreign key -> user_id, 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:No
	
	
	SQL code used to arrive at answer:
	SELECT COUNT(*)
  	FROM user
		WHERE id IS NULL OR 
		  name IS NULL OR 
		  review_count IS NULL OR 
		  yelping_since IS NULL OR
		  useful IS NULL OR 
		  funny IS NULL OR 
		  cool IS NULL OR 
		  fans IS NULL OR 
		  average_stars IS NULL OR 
		  compliment_hot IS NULL OR 
		  compliment_more IS NULL OR 
		  compliment_profile IS NULL OR 
		  compliment_cute IS NULL OR 
		  compliment_list IS NULL OR 
		  compliment_note IS NULL OR 
		  compliment_plain IS NULL OR 
		  compliment_cool IS NULL OR 
		  compliment_funny IS NULL OR 
		  compliment_writer IS NULL OR 
		  compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1	 max: 5		avg: 3.7
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2	    avg: 0.144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995 
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 
	
SELECT
  city,
  SUM(review_count) AS reviews
FROM business
GROUP BY city
ORDER BY reviews DESC
	
	
	Copy and Paste the Result Below:
	
	+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT stars,sum(review_count)
FROM business
where city= 'Avon'
group by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   1.5 |                10 |
|   2.5 |                 6 |
|   3.5 |                88 |
|   4.0 |                21 |
|   4.5 |                31 |
|   5.0 |                 3 |
+-------+-------------------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT stars,sum(review_count)
FROM business
where city= 'Beachwood'
group by stars



Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------------------+
| stars | sum(review_count) |
+-------+-------------------+
|   2.0 |                 8 |
|   2.5 |                 3 |
|   3.0 |                11 |
|   3.5 |                 6 |
|   4.0 |                69 |
|   4.5 |                17 |
|   5.0 |                23 |
+-------+-------------------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT name,sum(review_count)
	FROM user
	group by id,name
	order by sum(review_count) desc

	
		
	Copy and Paste the Result Below:
		Gerald    |              2000 |
		Sara      |              1629 |
		Yuri      |              1339 |


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	No Posting more reviews does not correlate with more fans because there is a huge difference between 
	the reviews posted and the number of fans a user has in actual numbers. 
	+-----------+-------------------+-----------+
| name      | sum(review_count) | sum(fans) |
+-----------+-------------------+-----------+
| Gerald    |              2000 |       253 |
| Sara      |              1629 |        50 |
| Yuri      |              1339 |        76 |
| .Hon      |              1246 |       101 |
| William   |              1215 |       126 |
| Harald    |              1153 |       311 |
| eric      |              1116 |        16 |
| Roanna    |              1039 |       104 |
| Mimi      |               968 |       497 |
| Christine |               930 |       173 |
| Ed        |               904 |        38 |
| Nicole    |               864 |        43 |
| Fran      |               862 |       124 |
| Mark      |               861 |       115 |
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with word love than hate. 

	
	SQL code used to arrive at answer:
	
	SELECT COUNT(*)									SELECT COUNT(*)
		FROM review										FROM review
		WHERE text LIKE "%love%"						WHERE text LIKE "%hate%"
		
		= 1780											= 232

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	select name,fans 
	from User 
	group by name, fans
	order by fans desc

Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
select case when b.stars < 4 then 'Group 1 (2-3)' else 'Group 2 (4-5)' end as Groups, count(distinct b.name),sum(b.review_count)
from category c
inner join 
business b
on c.business_id=b.id
where c.category = 'Food'
group by Groups,c.category	

i. Do the two groups you chose to analyze have a different distribution of hours?
select category, count(category)
from
(
select h.hours, sum(case when b.stars <4 then 1 else 5 end) as Category from hours h 
inner join business b 
on b.id=h.business_id
inner join category c 
on c.business_id=b.id
where c.category='Food'
group by h.hours
)
group by category

+----------+-----------------+
| Category | count(category) |
+----------+-----------------+
|        1 |              18 |
|        2 |               7 |
|        5 |              59 |
|       10 |               3 |
+----------+-----------------+


ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, the two groups have different number of reviews. 
+---------------+------------------------+---------------------+
| Groups        | count(distinct b.name) | sum(b.review_count) |
+---------------+------------------------+---------------------+
| Group 1 (2-3) |                      9 |                 106 |
| Group 2 (4-5) |                     14 |                1675 |
+---------------+------------------------+---------------------+

         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
It is found that the locations of both the groups  have a random distribution of the count of business.

SQL code used for analysis:

select case when  stars < 4 then 'Group 1' else 'Group2' end as Groups, city,count (distinct id)from business
group by city,Groups 

+---------+--------------+---------------------+
| Groups  | city         | count (distinct id) |
+---------+--------------+---------------------+
| Group2  | Aberdour     |                   1 |
| Group2  | Ahwahtukee   |                   1 |
| Group 1 | Ahwatukee    |                   1 |
| Group2  | Ahwatukee    |                   1 |
| Group 1 | Ajax         |                   6 |
| Group2  | Ajax         |                   5 |
| Group 1 | Allison Park |                   3 |
| Group2  | Allison Park |                   1 |
| Group2  | Ambridge     |                   3 |
| Group 1 | Amherst      |                   1 |
| Group 1 | Anjou        |                   2 |
| Group 1 | Anthem       |                   2 |
| Group2  | Anthem       |                   1 |
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         The business that are open have more reviews than that are closed. 
		 
		 +-------------------+----------------+
		| avg(review_count) | Groups         |
		+-------------------+----------------+
		|     23.1980263158 | Group 1 Closed |
		|     31.7570754717 | Group 2 Open   |
		+-------------------+----------------+
         
ii. Difference 2:
	The business that are open have more reviews than the ones that are closed. 
		+---------------+----------------+
		|    avg(stars) | Groups         |
		+---------------+----------------+
		| 3.52039473684 | Group 1 Closed |
		| 3.67900943396 | Group 2 Open   |
		+---------------+----------------+
         
         
         
SQL code used for analysis:
select avg(review_count) ,case when is_open=0 then 'Group 1' else 'Group 2' end as Groups from business
group by Groups 

select avg(stars) ,case when is_open=0 then 'Group 1 Closed' else 'Group 2 Open' end as Groups from business
group by Groups 


	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Using the given data, I am proceeding to find the overall star rating for a particular business. 

	
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

    I decided to rank the cities with the most number of 4-5 stars rating.
	
                  
iii. Output of your finished dataset:
         +-------------+--------------+----------+--------------+
| city        | review_count | category | stars_rating |
+-------------+--------------+----------+--------------+
| Toronto     |           26 | Bars     | 4_5_r        |
| Peninsula   |           42 | Bars     | 4_5_r        |
| Chandler    |           75 | Bars     | 3_4_r        |
| Toronto     |           10 | Bars     | 3_4_r        |
| Phoenix     |          431 | Bars     | 3_4_r        |
| Las Vegas   |          105 | Bars     | 3_4_r        |
| Toronto     |           15 | Bars     | 3_4_r        |
| Mesa        |          129 | Bars     | 3_4_r        |
| Medina      |           94 | Bars     | 3_4_r        |
| Westlake    |          105 | Bars     | 3_4_r        |
| Toronto     |           35 | Bars     | 2_3_r        |
| Coraopolis  |            3 | Bars     | 2_3_r        |
| Phoenix     |           60 | Bars     | 2_3_r        |
         
iv. Provide the SQL code you used to create your final dataset:
select city
         ,b.review_count
         ,c.category
          ,case
      when stars between '2' and '3' then '2_3_r'
      when stars between '3' and '4' then '3_4_r'
      when stars between '4' and '5' then '4_5_r'
      else 'other'
      end stars_rating
From business as b inner join category as C on C.business_id=b.id                 
Where  c.category='Bars'
Order by stars_rating desc;